{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Taller de Estructuras de Datos\n",
        "author: Edwin John Fredy Reyes Aguirre\n",
        "date: '2025-03-05'\n",
        "format: pdf\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "\n",
        "## Ejercicio de Lista de Productos\n",
        "\n",
        "### Enunciado del ejercicio\n",
        "\n",
        "Desarrolla un programa en Python que permita gestionar una lista de producto comprados, mostrando un resumen de la compra y el total a pagar. El programa debe cumplir con los siguientes requisitos:\n",
        "\n",
        "**1. Ingreso de productos:**\n",
        "  \n",
        "    1. El programa debe permitir agregar m√∫ltiples productos.\n",
        "    2. Para cada producto, el usuario debe ingresar:\n",
        "      - Nombre del producto.\n",
        "      - Cantidad comprada.\n",
        "      - Valor unitario del producto (precio por unidad).\n",
        "\n",
        "**2. C√°lculo del total por producto y total de la compra:**\n",
        "\n",
        "    1. El programa debe calcular el total por cada producto, multiplicando la cantidad por el valor unitario.\n",
        "    2. Tambi√©n debe calcular y mostrar el total de la compra, sumando los totales de cada producto.\n",
        "\n",
        "**3. Opciones del men√∫:**\n",
        "  - El programa debe presentar las siguientes opciones:\n",
        "\n",
        "    1. Agregar un nuevo producto.\n",
        "    2. Generar y mostrar los resultados, que incluyen el detalle de cada producto (nombre, cantidad, valor unitario y el total) y el total a pagar de toda la compra.\n",
        "    3. Salir del programa.\n",
        "\n",
        "**4. Validaci√≥n de entrada:**\n",
        "  - El programa debe validar las opciones del men√∫ y manejar errores su el usuario selecciona una opci√≥n v√°lida.\n"
      ],
      "id": "03218c88"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "lista_productos = []\n",
        "\n",
        "# Paso 1 : Crear el Men√∫\n",
        "while True:\n",
        "    print(\"\\nüìã Menu: \")  # Emotic√≥n de lista\n",
        "    print(\"1Ô∏è‚É£  Agregar producto üõí\")  # N√∫mero con emoji de carrito\n",
        "    print(\"2Ô∏è‚É£  Generar resultados üìä\")  # Emoji de gr√°fico\n",
        "    print(\"3Ô∏è‚É£  Salir üö™\")  # Emoji de puerta de salida\n",
        "\n",
        "    opcion = input(\"Seleccione una opci√≥n: \")\n",
        "\n",
        "    # Paso 2: Agregar productos\n",
        "    if opcion == \"1\":\n",
        "        try:\n",
        "            nombre = input(\"Ingrese el nombre del producto: \")\n",
        "            cantidad = int(input(\"Ingrese la cantidad del producto: \"))  \n",
        "            valor_unitario = float(input(\"Ingrese el valor unitario del producto: \"))\n",
        "\n",
        "            producto = {\n",
        "                \"nombre\": nombre,\n",
        "                \"cantidad\": cantidad,\n",
        "                \"valor_unitario\": valor_unitario\n",
        "            }\n",
        "\n",
        "            lista_productos.append(producto)\n",
        "            print(\"‚úÖ Producto agregado con √©xito. \\n\")\n",
        "\n",
        "        except ValueError:\n",
        "            print(\"‚ùå Error: Debes ingresar valores num√©ricos v√°lidos para la cantidad y el precio.\")\n",
        "\n",
        "    # Paso 3: Mostrar Resultados\n",
        "    elif opcion == \"2\":\n",
        "        if not lista_productos:  # Verificamos si la lista est√° vac√≠a\n",
        "            print(\"‚ö†Ô∏è No hay productos en la lista. Agrega productos antes de ver los resultados.\")\n",
        "        else:\n",
        "            total_compra = 0\n",
        "            for producto in lista_productos:\n",
        "                total_producto = producto[\"cantidad\"] * producto[\"valor_unitario\"]\n",
        "                total_compra += total_producto\n",
        "                # Mostrar detalle del producto con emojis\n",
        "                print(\"\\nüì¶ **Detalle del Producto** üì¶\")\n",
        "                print(f\"üõçÔ∏è Producto: {producto['nombre']}\")\n",
        "                print(f\"üì¶ Cantidad: {producto['cantidad']}\")\n",
        "                print(f\"üí∞ Valor unitario: ${producto['valor_unitario']}\")\n",
        "                print(f\"üßæ Total del producto: ${total_producto}\\n\")\n",
        "\n",
        "            # Mostrar el total de la compra\n",
        "            print(\"-\" * 50)\n",
        "            print(f\"\\nüõí Total de la compra: üíµ ${total_compra:.2f}\\n\")\n",
        "\n",
        "    elif opcion == \"3\":\n",
        "        print(\"Has seleccionado la opci√≥n 3: Salir\")\n",
        "        break\n",
        "\n",
        "    else:\n",
        "        print(\"‚ùå Opci√≥n inv√°lida. Por favor, seleccione una opci√≥n v√°lida.\")"
      ],
      "id": "70699567",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Library/Frameworks/Python.framework/Versions/3.13/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}